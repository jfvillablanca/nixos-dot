(defwidget bar []
  (centerbox :orientation "h"
    (workspaces)
    (music)
    (sidestuff)))

(defwidget sidestuff []
  (box :class "sidestuff" :orientation "h" :space-evenly false :halign "end"
    (metric :label "ðŸ”Š"
            :value volume
            :onchange "pamixer --set-volume {}")
    (metric :label "ï¡š"
            :value {EWW_RAM.used_mem_perc}
            :onchange "")
    (metric :label "ðŸ’¾"
            :value {round((1 - (EWW_DISK["/"].free / EWW_DISK["/"].total)) * 100, 0)}
            :onchange "")
    time))

;; FIXME: is not similar yet to my i3 config, needs more research on how to implement
(defwidget workspaces []
  (box :class "workspaces"
       :orientation "h"
       :space-evenly true
       :halign "start"
       :spacing 10
    (button :onclick "hyprctl dispatch focusworkspaceoncurrentmonitor 1" 1)
    (button :onclick "hyprctl dispatch focusworkspaceoncurrentmonitor 2" 2)
    (button :onclick "hyprctl dispatch focusworkspaceoncurrentmonitor 3" 3)
    (button :onclick "hyprctl dispatch focusworkspaceoncurrentmonitor 4" 4)
    (button :onclick "hyprctl dispatch focusworkspaceoncurrentmonitor 5" 5)
    (button :onclick "hyprctl dispatch focusworkspaceoncurrentmonitor 6" 6)
    (button :onclick "hyprctl dispatch focusworkspaceoncurrentmonitor 7" 7)
    (button :onclick "hyprctl dispatch focusworkspaceoncurrentmonitor 8" 8)
    (button :onclick "hyprctl dispatch focusworkspaceoncurrentmonitor 9" 9)))

(defwidget music []
  (box :class "music"
       :orientation "h"
       :space-evenly false
       :halign "center"
    {music != "" ? "ðŸŽµ${music}" : ""}))


(defwidget metric [label value onchange]
  (box :orientation "h"
       :class "metric"
       :space-evenly false
    (box :class "label" label)
    (scale :min 0
           :max 101
           :active {onchange != ""}
           :value value
           :onchange onchange)))



(deflisten music :initial ""
  "playerctl --follow metadata --format '{{ artist }} - {{ title }}' || true")

(defpoll volume :interval "1s"
  "pamixer --get-volume")

(defpoll time :interval "10s"
  "date '+%H:%M %b %d, %Y'")

(defwindow bar
  :monitor 0
  :stacking "fg"
  :exclusive "true"
  :focusable "false"
  :geometry (geometry :x "0%"
                      :y "0%"
                      :width "100%"
                      :height "10px"
                      :anchor "top center")
  :reserve (struts :side "top" :distance "2%")
  (bar))
